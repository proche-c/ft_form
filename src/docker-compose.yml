services:
  ft_form:
    container_name: ft_form
    build:
      context: .
      args:
        - DEV=true
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app
      - static-data:/vol/web
      - media-data:/vol/web/media
      - cache-data:/vol/cache
      # - log-data:/vol/log:rw
    command: >
      sh -c "python manage.py wait_for_db &&
              python manage.py migrate &&
              python manage.py runserver 0.0.0.0:8000"
    env_file:
      - .env
    environment:
      - DEBUG=1
    depends_on:
      - db_form

  db_form:
    container_name: db_form
    image: postgres:13-alpine
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}

  adminer_form:
    container_name: adminer_form
    image: adminer
    restart: always
    volumes:
      - cache-data:/vol/cache
    ports:
      - 8080:8080

volumes:
  db-data:
    driver: local
    driver_opts:
      type: none
      device: ./data/db
      o: bind
  static-data:
    driver: local
    driver_opts:
      type: none
      device: ./data/static
      o: bind
  media-data:
    driver: local
    driver_opts:
      type: none
      device: ./data/static/media
      o: bind
  
  cache-data:
    driver: local
    driver_opts:
      type: none
      device: ./app/core/migrations
      o: bind
  